(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{198:function(n,e,t){"use strict";t.r(e);var i=t(0),r=Object(i.a)({},function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("p",[n._v("隐式类型转换：当运算符在运算时，如果两边数据不统一，CPU就无法计算，这时我们编译器会自动将运算符两边的数据做一个数据类型转换，转成一样的数据类型再计算。下面是隐式类型转换的几种场景：")]),n._v(" "),t("ul",[t("li",[t("p",[n._v("if语句中会自动转换为Boolean类型。\n1、转为false的情况：\n（1）空字符串：if ('')\n（2）0：if (0)\n（3）undefined: if (undefiend)\n（4）null: if (null)\n2、转换为ture的情况：\n（1）非空字符串：if ('1234')\n（2）非0数值: if (1)\n（3）所有对象包括（"),t("strong",[n._v("空对象")]),n._v("）：if ({})\n（4）所有数组包括（"),t("strong",[n._v("空数组")]),n._v("）：if ([])")])]),n._v(" "),t("li",[t("p",[n._v("+、-、*、/运算\n1、+运算：\n（1）当一方有字符串时，将另一个转换成字符串在运算：")]),n._v(" "),t("pre",[t("code",[n._v("      1 + '1' = 11\n")])])])]),n._v(" "),t("p",[n._v("（2）除了字符串，其他"),t("strong",[n._v("基本数据类型")]),n._v("与数字进行运算时，将另一方转换为数字类型：")]),n._v(" "),t("pre",[t("code",[n._v("       1 + false = 1\n       1 + undefiend = NaN //Number(undefiend) = NaN\n       1 + null = 1\n")])]),n._v(" "),t("p",[n._v("（3）复杂数据类型的计算: 先转换成string,再转换成number。\n复杂数据类型转换成number的过程如下：先调用valueOf转换成原始值，如果原始值不是number,则使用toString方法转成string。再将string转成number。")])])},[],!1,null,null,null);e.default=r.exports}}]);